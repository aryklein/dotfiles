## Variable definitions
#
$mod = SUPER
$terminal = kitty
$menu = fuzzel --show drun
#$menu = wofi -i
$notification = mako
$bar = waybar
$screenshot = grim -g "$(slurp)" ~/Pictures/$(date +%F_%H-%M-%S).png
$swappy = grim -g "$(slurp)" - | swappy -f -
$idle = swayidle -w timeout 120 'grep 0 /sys/class/power_supply/AC/online && light -G > /tmp/brightness && light -S 10' resume 'light -S $([ -f /tmp/brightness ] && cat /tmp/brightness || echo 100%)' timeout 300 'hyprctl dispatch dpms off' resume 'hyprctl dispatch dpms on' timeout 360 'exec swaylock' before-sleep 'exec swaylock'
$onscreen_bar = bash $HOME/.config/sway/scripts/wob.sh
$sink_volume = pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
$source_volume = pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
$volume_down = $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
$volume_up = $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
$volume_mute = $onscreen_bar $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
$mic_mute = $onscreen_bar $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")
$idle_now = sleep 2 && killall -SIGUSR1 swayidle
$wallpaper = ~/.config/backgrounds/desktop-background

# brightness control
$brightness_step = bash -c 'echo $(( $(light -Mr) / 100 * 5 < 1 ? 1 : $(( $(light -Mr) / 100 * 5 )) ))'
$brightness_up = light -r -A $($brightness_step) && $onscreen_bar $(light -G | cut -d'.' -f1)
$brightness_down = light -r -U $($brightness_step) && $onscreen_bar $(light -G | cut -d'.' -f1)

## Some default env vars
#
env = MOZ_ENABLE_WAYLAND, 1
env = MOZ_DBUS_REMOTE, 1
env = GTK_CSD, 0
env = QT_QPA_PLATFORM, wayland;xcb
env = QT_QPA_PLATFORMTHEME, qt5ct
env = QT_WAYLAND_DISABLE_WINDOWDECORATION, 1
env = SDL_VIDEODRIVER, wayland
env = _JAVA_AWT_WM_NONREPARENTING, 1
env = XDG_CURRENT_DESKTOP, Hyprland
env = XDG_SESSION_TYPE, wayland
env = XDG_SESSION_DESKTOP, Hyprland
env = EDITOR, nvim
env = XCURSOR_SIZE,24
env = GTK_THEME, Adwaita:dark

# See https://wiki.hyprland.org/Configuring/Monitors/
monitor=DP-2,preferred,0x0,auto
monitor=eDP-1,preferred,2560x0,1

## Execute your favorite apps at launch
#
#exec-once = ~/.config/hypr/scripts/xdg-portal-hyprland
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = ~/.config/hypr/scripts/gtk-theme.sh
exec-once = $bar
exec-once = $notification
exec-once = dropbox
exec-once = $idle
exec-once = swaybg -m fill -i $wallpaper
exec-once = wl-paste --type text --watch cliphist -max-items 10 store
#exec-once = hyprpaper


## Input devices
#
input {
    kb_layout = us
    kb_variant = altgr-intl
    kb_model =
#    kb_options = caps:swapescape
    kb_rules =
    repeat_delay = 600
    repeat_rate = 35

    follow_mouse = 1

    touchpad {
        natural_scroll = yes
    }
    sensitivity = 0  # -1.0 - 1.0, 0 means no modification.
}

# Expert Trackball Mouse
# note: you can use `libinput debug-events` to get the button numbers
device:kensington-expert-wireless-tb-mouse {
    #sensitivity = -0.9
    accel_profile = adaptive
    scroll_method = on_button_down
    scroll_button = 275
}

# Logitech Lift mouse
device:logitech-usb-receiver-mouse {
    sensitivity = -0.4
}

## General configuration
#
general {
    gaps_in = 5
    gaps_out = 5
    border_size = 2
    #col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.active_border = rgba(78a9ffee) rgba(46c880ee) 45deg
    col.inactive_border = rgba(595959aa)

    layout = dwindle
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    rounding = 0
    drop_shadow = no
    blur {
      enabled = no
    }
}

animations {
    enabled = yes
    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 0, 7, default
    animation = workspaces, 1, 7, default, fade
}

dwindle {
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to $mod + P in the keybinds section below
    preserve_split = yes # you probably want this
    force_split = 2
}

master {
    new_is_master = true
}

gestures {
    workspace_swipe = off
}

misc {
    disable_hyprland_logo = yes
}

binds {
    workspace_back_and_forth = yes
    allow_workspace_cycles = yes
}

## Window rules
#
# Kitty for Waybar window
windowrulev2 = float,class:^(floating_shell)$
windowrulev2 = size 50% 70%,class:^(floating_shell)$
windowrulev2 = center,class:^(floating_shell)$

# Open Files window
windowrule = float,title:(Open Files|Save File)
windowrule = size 60% 90%,title:(Open Files|Save File)
windowrule = center,title:Open Files

## Key bindings
#
bind = $mod, RETURN, exec, $terminal
bind = $mod SHIFT, q, killactive,
bind = $mod SHIFT, E, exit,
bind = $mod SHIFT, RETURN, exec, brave
bind = $mod, SPACE, togglefloating,
bind = $mod, d, exec, killall $menu 2>/dev/null; $menu
bind = $mod, p, pseudo, # dwindle
bind = $mod, s, togglesplit, # dwindle
bind = $mod, f, fullscreen
bind = $mod, ESCAPE, workspace, previous
bind = $mod, v, exec, killall fuzzel 2>/dev/null; cliphist list | awk '{print $2}' | fuzzel -d | tr -d '\n' | wl-copy
bindr = $mod, i, exec, $idle_now


# Move focus with $mod + hjkl
bind = $mod, l, movefocus, r
bind = $mod, h, movefocus, l
bind = $mod, k, movefocus, u
bind = $mod, j, movefocus, d

# Switch workspaces with $mod + [0-9]
bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9
bind = $mod, 0, workspace, 10

# move active window to a workspace with $mod + shift + [0-9]
bind = $mod SHIFT, 1, movetoworkspacesilent, 1
bind = $mod SHIFT, 2, movetoworkspacesilent, 2
bind = $mod SHIFT, 3, movetoworkspacesilent, 3
bind = $mod SHIFT, 4, movetoworkspacesilent, 4
bind = $mod SHIFT, 5, movetoworkspacesilent, 5
bind = $mod SHIFT, 6, movetoworkspacesilent, 6
bind = $mod SHIFT, 7, movetoworkspacesilent, 7
bind = $mod SHIFT, 8, movetoworkspacesilent, 8
bind = $mod SHIFT, 9, movetoworkspacesilent, 9
bind = $mod SHIFT, 0, movetoworkspacesilent, 10

# Print screen
bind = , Print, exec, $screenshot
bind = SHIFT, Print, exec, $swappy

# Scroll through existing workspaces with $mod+[SHIFT] + TAB
bind = $mod, TAB, workspace, e+1
bind = $mod SHIFT, TAB, workspace, e-1

# Move windows position with $mod + SHIFT + hjkl
bind = $mod SHIFT, l, movewindow,r
bind = $mod SHIFT, h, movewindow,l
bind = $mod SHIFT, k, movewindow,u
bind = $mod SHIFT, j, movewindow,d

## volume control
binde = , XF86AudioRaiseVolume, exec, $volume_up
binde = , XF86AudioLowerVolume, exec, $volume_down
bind = , XF86AudioMute, exec, $volume_mute

# brightness control
bindl = , XF86MonBrightnessUp, exec, $brightness_up
bindl = , XF86MonBrightnessDown, exec, $brightness_down

# Move/resize windows with $mod + mouse
bindm = $mod, mouse:272, movewindow
bindm = $mod, mouse:273, resizewindow

## resize window with $mod + R
# will switch to a submap called resize
bind = $mod, R, submap, resize
# will start a submap called "resize"
submap = resize
# sets repeatable binds for resizing the active window
binde = , h, resizeactive, 15 0
binde = , l, resizeactive, -15 0
binde = , k, resizeactive, 0 -15
binde = , j, resizeactive, 0 15
# use ESCAPE key to go back to the global submap
bind = , ESCAPE, submap, reset
# will reset the submap, meaning end the current one and return to the global one
submap = reset
##

#close/open lid event
bindl=,switch:on:Lid Switch,exec,hyprctl keyword monitor "eDP-1, disable"
bindl=,switch:off:Lid Switch,exec,hyprctl keyword monitor "eDP-1,preferred,2560x0,1"

# laptop display toggle on/off
bind = $mod SHIFT, t, exec, ~/.config/hypr/scripts/laptop_display_toggle.sh
